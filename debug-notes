Analysis

ResultSchema observable is canceling the pipeline and is blocking the results from flowing

Node 1

[2023-11-21 22:11:37,226] DEBUG filo-standalone-akka.actor.default-dispatcher-4 f.c.q.SingleClusterPlanner [] - Materialized logical plan for dataset=prometheus : PeriodicSeries(RawSeries(IntervalSelector(1700633447000,1700637047000),List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(__name__,Equals(heap_usage0))),List(),Some(300000),None),1700633447000,15000,1700637047000,None) to
E~LocalPartitionDistConcatExec() c85cb9e4-3120-439e-a4e8-895269612e4c on ActorPlanDispatcher(Actor[akka.tcp://filo-standalone@127.0.0.1:3552/user/coordinator#1153377990],raw)
-T~PeriodicSamplesMapper(start=1700633447000, step=15000, end=1700637047000, window=None, functionId=None, rawSource=true, offsetMs=None)
--E~MultiSchemaPartitionsExec(dataset=prometheus, shard=0, chunkMethod=TimeRangeChunkScan(1700633147000,1700637047000), filters=List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(_metric_,Equals(heap_usage0))), colName=None, schema=None) 85d7e996-74b8-4381-83d1-db6b850766f8 on ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1948356620],raw)
-T~PeriodicSamplesMapper(start=1700633447000, step=15000, end=1700637047000, window=None, functionId=None, rawSource=true, offsetMs=None)
--E~MultiSchemaPartitionsExec(dataset=prometheus, shard=2, chunkMethod=TimeRangeChunkScan(1700633147000,1700637047000), filters=List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(_metric_,Equals(heap_usage0))), colName=None, schema=None) 0248287b-b100-4ed1-9f5c-dcbc8c4aacee on ActorPlanDispatcher(Actor[akka.tcp://filo-standalone@127.0.0.1:3552/user/coordinator#1153377990],raw)
[2023-11-21 22:11:37,237] INFO  filo-standalone-akka.actor.default-dispatcher-2 f.coordinator.ResultActor [] - Starting class filodb.coordinator.ResultActor, actor Actor[akka://filo-standalone/user/$a#-38941014] with path akka://filo-standalone/user/$a
[2023-11-21 22:11:37,237] DEBUG filo-standalone-akka.actor.default-dispatcher-4 filodb.query.Query$ [] - DISPATCHING c85cb9e4-3120-439e-a4e8-895269612e4c
[2023-11-21 22:11:37,237] DEBUG filo-standalone-akka.actor.default-dispatcher-2 f.coordinator.ResultActor [] - In preStart()
[2023-11-21 22:11:37,357] DEBUG filo-standalone-akka.actor.default-dispatcher-4 filodb.query.Query$ [] - Got StreamQueryResultHeader for plan c85cb9e4-3120-439e-a4e8-895269612e4c
0: ResultActor-c85cb9e4-3120-439e-a4e8-895269612e4c --> StreamQueryResultHeader(f5167693-9807-4ef8-81a4-1a2f3bf9483c,c85cb9e4-3120-439e-a4e8-895269612e4c,ResultSchema(List(ColumnInfo(timestamp,TimestampColumn,true), ColumnInfo(value,DoubleColumn,true)),1,Map(),Some(241),List(0, 1)))
[2023-11-21 22:11:37,369] DEBUG filo-standalone-akka.actor.default-dispatcher-2 f.coordinator.QueryActor [] - Received request to run query MultiSchemaPartitionsExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1948356620],raw),prometheus,0,List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(_metric_,Equals(heap_usage0))),TimeRangeChunkScan(1700633147000,1700637047000),_metric_,None,None)
[2023-11-21 22:11:37,372] DEBUG filo-standalone-akka.actor.default-dispatcher-2 filodb.query.Query$ [] - Constructed monix query execution pipeline for MultiSchemaPartitionsExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1948356620],raw),prometheus,0,List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(_metric_,Equals(heap_usage0))),TimeRangeChunkScan(1700633147000,1700637047000),_metric_,None,None)
[2023-11-21 22:11:37,375] INFO  query-sched-9 filodb.core.Utils$ [] - Measurement of CPU Time Enabled: true
[2023-11-21 22:11:37,383] DEBUG query-sched-9 f.c.m.PartKeyLuceneIndex [] - Querying dataset=prometheus shard=0 partKeyIndex with: ConstantScore(#_ns_:App-0 #_ws_:demo #_metric_:heap_usage0 #__startTime__:[0 TO 1700637047000] #__endTime__:[1700633147000 TO 9223372036854775807])
[2023-11-21 22:11:37,417] DEBUG query-sched-9 f.c.m.OnDemandPagingShard [] - Some partitions have earliestTime > queryStartTime(1700633147000); startTime lookup for query in dataset=prometheus shard=0 resulted in startTimes=Map(0 -> 1700633447869, 1 -> 1700633447869, 2 -> 1700633447869, 3 -> 1700633447869, 4 -> 1700633447869, 5 -> 1700633447869, 6 -> 1700633447869, 7 -> 1700633447869, 8 -> 1700633447869, 9 -> 1700633447869, 10 -> 1700633447869, 11 -> 1700633447869, 12 -> 1700633447869, 13 -> 1700633447869, 14 -> 1700633447869, 15 -> 1700633447869, 16 -> 1700633447869, 17 -> 1700633447869, 18 -> 1700633447869, 19 -> 1700633447869, 20 -> 1700633447869, 21 -> 1700633447869, 22 -> 1700633447869, 23 -> 1700633447869, 24 -> 1700633447869, 25 -> 1700633447869, 26 -> 1700633447869, 27 -> 1700633447869, 28 -> 1700633447869, 29 -> 1700633447869, 30 -> 1700633447869, 31 -> 1700633447869, 32 -> 1700633447869, 33 -> 1700633447869, 34 -> 1700633447869, 35 -> 1700633447869, 36 -> 1700633447869, 37 -> 1700633447869, 38 -> 1700633447869, 39 -> 1700633447869, 40 -> 1700633447869, 41 -> 1700633447869, 42 -> 1700633447869, 43 -> 1700633447869, 44 -> 1700633447869, 45 -> 1700633447869, 46 -> 1700633447869, 47 -> 1700633447869, 48 -> 1700633447869, 49 -> 1700633447869)
[2023-11-21 22:11:37,422] DEBUG query-sched-9 filodb.query.Query$ [] - Discovered schema untyped and created inner plan SelectRawPartitionsExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1948356620],raw),prometheus,Some(Schema(partition=PartitionSchema(Vector([65536,_metric_,StringColumn], [65537,tags,MapColumn]),Vector(_ws_, _ns_, app, __name__, instance, dc, le, job, exporter, _pi_),{"copyTags":{"_ns_":["_ns","exporter","job"]},"hasDownsampledData":false,"ignoreShardKeyColumnSuffixes":{"_metric_":["_bucket","_count","_sum"]},"ignoreTagsOnPartitionKeyHash":["le"],"metricColumn":"_metric_","multiColumnFacets":{},"shardKeyColumns":["_ws_","_ns_","_metric_"]}), data=DataSchema(untyped,Vector([0,timestamp,TimestampColumn], [1,number,DoubleColumn]),Vector(),2015,1,None,filodb.core.downsample.TimeDownsamplePeriodMarker@4bb9feaf), downsample=None)),Some(PartLookupResult(0,TimeRangeChunkScan(1700633147000,1700637047000),Buffer(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49),Some(61075),Map(0 -> 1700633447869, 1 -> 1700633447869, 2 -> 1700633447869, 3 -> 1700633447869, 4 -> 1700633447869, 5 -> 1700633447869, 6 -> 1700633447869, 7 -> 1700633447869, 8 -> 1700633447869, 9 -> 1700633447869, 10 -> 1700633447869, 11 -> 1700633447869, 12 -> 1700633447869, 13 -> 1700633447869, 14 -> 1700633447869, 15 -> 1700633447869, 16 -> 1700633447869, 17 -> 1700633447869, 18 -> 1700633447869, 19 -> 1700633447869, 20 -> 1700633447869, 21 -> 1700633447869, 22 -> 1700633447869, 23 -> 1700633447869, 24 -> 1700633447869, 25 -> 1700633447869, 26 -> 1700633447869, 27 -> 1700633447869, 28 -> 1700633447869, 29 -> 1700633447869, 30 -> 1700633447869, 31 -> 1700633447869, 32 -> 1700633447869, 33 -> 1700633447869, 34 -> 1700633447869, 35 -> 1700633447869, 36 -> 1700633447869, 37 -> 1700633447869, 38 -> 1700633447869, 39 -> 1700633447869, 40 -> 1700633447869, 41 -> 1700633447869, 42 -> 1700633447869, 43 -> 1700633447869, 44 -> 1700633447869, 45 -> 1700633447869, 46 -> 1700633447869, 47 -> 1700633447869, 48 -> 1700633447869, 49 -> 1700633447869),Buffer(),List(),0)),false,List(0, 1),85d7e996-74b8-4381-83d1-db6b850766f8)
[2023-11-21 22:11:37,424] DEBUG query-sched-9 filodb.query.Query$ [] - queryId=f5167693-9807-4ef8-81a4-1a2f3bf9483c on dataset=prometheus shard=0 schema=Some(untyped) is configured to use columnIDs=List(0, 1)
[2023-11-21 22:11:37,427] DEBUG query-sched-9 f.c.m.OnDemandPagingShard [] - Query on dataset=prometheus shard=0 resulted in partial ODP of partIds Set(), and full ODP of partIds Buffer()
0: QueryActor-85d7e996-74b8-4381-83d1-db6b850766f8 --> StreamQueryResultHeader(f5167693-9807-4ef8-81a4-1a2f3bf9483c,85d7e996-74b8-4381-83d1-db6b850766f8,ResultSchema(List(ColumnInfo(timestamp,TimestampColumn,true), ColumnInfo(value,DoubleColumn,true)),1,Map(),Some(241),List(0, 1)))
[2023-11-21 22:11:37,448] DEBUG query-sched-9 f.c.m.OnDemandPagingShard [] - Finished creating full ODP partitions List()
1: QueryActor-85d7e996-74b8-4381-83d1-db6b850766f8 --> StreamQueryResult(f5167693-9807-4ef8-81a4-1a2f3bf9483c,85d7e996-74b8-4381-83d1-db6b850766f8,ArrayBuffer(filodb.core.query.SerializedRangeVector@493d958e, filodb.core.query.SerializedRangeVector@2576a3ae, filodb.core.query.SerializedRangeVector@5896ed23, filodb.core.query.SerializedRangeVector@25f7f68e, filodb.core.query.SerializedRangeVector@c3865b, filodb.core.query.SerializedRangeVector@10382e3e, filodb.core.query.SerializedRangeVector@7f2826ef, filodb.core.query.SerializedRangeVector@65f1fc02, filodb.core.query.SerializedRangeVector@799c5fb9, filodb.core.query.SerializedRangeVector@2804d76a, filodb.core.query.SerializedRangeVector@16a593db, filodb.core.query.SerializedRangeVector@7c5e7ce1, filodb.core.query.SerializedRangeVector@67248544, filodb.core.query.SerializedRangeVector@6995b14d, filodb.core.query.SerializedRangeVector@5314ccef, filodb.core.query.SerializedRangeVector@5c221b18, filodb.core.query.SerializedRangeVector@1f6fbb7d, filodb.core.query.SerializedRangeVector@5bb47e04, filodb.core.query.SerializedRangeVector@2eb2a229, filodb.core.query.SerializedRangeVector@6204963c, filodb.core.query.SerializedRangeVector@d26d52, filodb.core.query.SerializedRangeVector@78ee6712, filodb.core.query.SerializedRangeVector@437631cc, filodb.core.query.SerializedRangeVector@505eae8, filodb.core.query.SerializedRangeVector@16aeafe7, filodb.core.query.SerializedRangeVector@1df38cd7, filodb.core.query.SerializedRangeVector@6f7936f4, filodb.core.query.SerializedRangeVector@4501d359, filodb.core.query.SerializedRangeVector@26b38d89, filodb.core.query.SerializedRangeVector@272738bc, filodb.core.query.SerializedRangeVector@1cf743a, filodb.core.query.SerializedRangeVector@4a9fe441, filodb.core.query.SerializedRangeVector@707af75e, filodb.core.query.SerializedRangeVector@6e06c335, filodb.core.query.SerializedRangeVector@1492146b, filodb.core.query.SerializedRangeVector@219a4754, filodb.core.query.SerializedRangeVector@6fd943e, filodb.core.query.SerializedRangeVector@5e3ae0bf, filodb.core.query.SerializedRangeVector@5a8f865f, filodb.core.query.SerializedRangeVector@295ccabd, filodb.core.query.SerializedRangeVector@43eaf7cc, filodb.core.query.SerializedRangeVector@4adcc816, filodb.core.query.SerializedRangeVector@6c47126c, filodb.core.query.SerializedRangeVector@2381247b, filodb.core.query.SerializedRangeVector@3741e350, filodb.core.query.SerializedRangeVector@1bf111d6, filodb.core.query.SerializedRangeVector@4ff1a4b6, filodb.core.query.SerializedRangeVector@6579f3cf, filodb.core.query.SerializedRangeVector@5d9ac753, filodb.core.query.SerializedRangeVector@4ef60297))
2: QueryActor-85d7e996-74b8-4381-83d1-db6b850766f8 --> StreamQueryResultFooter(f5167693-9807-4ef8-81a4-1a2f3bf9483c,85d7e996-74b8-4381-83d1-db6b850766f8,TrieMap(List(local, raw, demo, App-0, heap_usage0) -> (timeSeriesScanned=50, dataBytesScanned=288800, resultBytes=250243, cpuNanos=102128000)),QueryWarnings(0,0,0,0,0,0,0),false,None)
3: QueryActor-85d7e996-74b8-4381-83d1-db6b850766f8 completed

Node 2

[2023-11-21 22:11:37,270] DEBUG filo-standalone-akka.actor.default-dispatcher-4 f.coordinator.QueryActor [] - Received request to run query LocalPartitionDistConcatExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1153377990],raw),Vector(MultiSchemaPartitionsExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka.tcp://filo-standalone@127.0.0.1:2552/user/coordinator#1948356620],raw),prometheus,0,List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(_metric_,Equals(heap_usage0))),TimeRangeChunkScan(1700633147000,1700637047000),_metric_,None,None), MultiSchemaPartitionsExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1153377990],raw),prometheus,2,List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(_metric_,Equals(heap_usage0))),TimeRangeChunkScan(1700633147000,1700637047000),_metric_,None,None)))
[2023-11-21 22:11:37,275] DEBUG filo-standalone-akka.actor.default-dispatcher-4 filodb.query.Query$ [] - Constructed monix query execution pipeline for LocalPartitionDistConcatExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1153377990],raw),Vector(MultiSchemaPartitionsExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka.tcp://filo-standalone@127.0.0.1:2552/user/coordinator#1948356620],raw),prometheus,0,List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(_metric_,Equals(heap_usage0))),TimeRangeChunkScan(1700633147000,1700637047000),_metric_,None,None), MultiSchemaPartitionsExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1153377990],raw),prometheus,2,List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(_metric_,Equals(heap_usage0))),TimeRangeChunkScan(1700633147000,1700637047000),_metric_,None,None)))
[2023-11-21 22:11:37,279] INFO  query-sched-9 filodb.core.Utils$ [] - Measurement of CPU Time Enabled: true
[2023-11-21 22:11:37,291] DEBUG query-sched-9 filodb.query.Query$ [] - DISPATCHING 0248287b-b100-4ed1-9f5c-dcbc8c4aacee
[2023-11-21 22:11:37,291] INFO  filo-standalone-akka.actor.default-dispatcher-3 f.coordinator.ResultActor [] - Starting class filodb.coordinator.ResultActor, actor Actor[akka://filo-standalone/user/$a#-405920891] with path akka://filo-standalone/user/$a
[2023-11-21 22:11:37,291] DEBUG filo-standalone-akka.actor.default-dispatcher-2 f.coordinator.QueryActor [] - Received request to run query MultiSchemaPartitionsExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1153377990],raw),prometheus,2,List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(_metric_,Equals(heap_usage0))),TimeRangeChunkScan(1700633147000,1700637047000),_metric_,None,None)
[2023-11-21 22:11:37,291] DEBUG filo-standalone-akka.actor.default-dispatcher-2 filodb.query.Query$ [] - Constructed monix query execution pipeline for MultiSchemaPartitionsExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1153377990],raw),prometheus,2,List(ColumnFilter(_ns_,Equals(App-0)), ColumnFilter(_ws_,Equals(demo)), ColumnFilter(_metric_,Equals(heap_usage0))),TimeRangeChunkScan(1700633147000,1700637047000),_metric_,None,None)
[2023-11-21 22:11:37,291] DEBUG filo-standalone-akka.actor.default-dispatcher-3 f.coordinator.ResultActor [] - In preStart()
[2023-11-21 22:11:37,298] DEBUG query-sched-2 f.c.m.PartKeyLuceneIndex [] - Querying dataset=prometheus shard=2 partKeyIndex with: ConstantScore(#_ns_:App-0 #_ws_:demo #_metric_:heap_usage0 #__startTime__:[0 TO 1700637047000] #__endTime__:[1700633147000 TO 9223372036854775807])
[2023-11-21 22:11:37,329] DEBUG query-sched-2 f.c.m.OnDemandPagingShard [] - Some partitions have earliestTime > queryStartTime(1700633147000); startTime lookup for query in dataset=prometheus shard=2 resulted in startTimes=Map(0 -> 1700633447869, 1 -> 1700633447869, 2 -> 1700633447869, 3 -> 1700633447869, 4 -> 1700633447869, 5 -> 1700633447869, 6 -> 1700633447869, 7 -> 1700633447869, 8 -> 1700633447869, 9 -> 1700633447869, 10 -> 1700633447869, 11 -> 1700633447869, 12 -> 1700633447869, 13 -> 1700633447869, 14 -> 1700633447869, 15 -> 1700633447869, 16 -> 1700633447869, 17 -> 1700633447869, 18 -> 1700633447869, 19 -> 1700633447869, 20 -> 1700633447869, 21 -> 1700633447869, 22 -> 1700633447869, 23 -> 1700633447869, 24 -> 1700633447869, 25 -> 1700633447869, 26 -> 1700633447869, 27 -> 1700633447869, 28 -> 1700633447869, 29 -> 1700633447869, 30 -> 1700633447869, 31 -> 1700633447869, 32 -> 1700633447869, 33 -> 1700633447869, 34 -> 1700633447869, 35 -> 1700633447869, 36 -> 1700633447869, 37 -> 1700633447869, 38 -> 1700633447869, 39 -> 1700633447869, 40 -> 1700633447869, 41 -> 1700633447869, 42 -> 1700633447869, 43 -> 1700633447869, 44 -> 1700633447869, 45 -> 1700633447869, 46 -> 1700633447869, 47 -> 1700633447869, 48 -> 1700633447869, 49 -> 1700633447869)
[2023-11-21 22:11:37,334] DEBUG query-sched-2 filodb.query.Query$ [] - Discovered schema untyped and created inner plan SelectRawPartitionsExec(QueryContext(PromQlQueryParams(heap_usage0{_ns_="App-0",_ws_="demo"},1700633447,15,1700637047,None,false),f5167693-9807-4ef8-81a4-1a2f3bf9483c,1700633497201,PlannerParams(filodb,None,Some(StaticSpreadProvider(SpreadChange(0,1))),None,None,60000,PerQueryLimits(1000000,18000000,100000,100000,300000000,1000000,200000000),PerQueryLimits(50000,15000000,50000,50000,150000000,500000,100000000),None,None,None,false,86400000,86400000,false,true,false,false),Map()),ActorPlanDispatcher(Actor[akka://filo-standalone/user/coordinator#1153377990],raw),prometheus,Some(Schema(partition=PartitionSchema(Vector([65536,_metric_,StringColumn], [65537,tags,MapColumn]),Vector(_ws_, _ns_, app, __name__, instance, dc, le, job, exporter, _pi_),{"copyTags":{"_ns_":["_ns","exporter","job"]},"hasDownsampledData":false,"ignoreShardKeyColumnSuffixes":{"_metric_":["_bucket","_count","_sum"]},"ignoreTagsOnPartitionKeyHash":["le"],"metricColumn":"_metric_","multiColumnFacets":{},"shardKeyColumns":["_ws_","_ns_","_metric_"]}), data=DataSchema(untyped,Vector([0,timestamp,TimestampColumn], [1,number,DoubleColumn]),Vector(),2015,1,None,filodb.core.downsample.TimeDownsamplePeriodMarker@56e76e4b), downsample=None)),Some(PartLookupResult(2,TimeRangeChunkScan(1700633147000,1700637047000),Buffer(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49),Some(61075),Map(0 -> 1700633447869, 1 -> 1700633447869, 2 -> 1700633447869, 3 -> 1700633447869, 4 -> 1700633447869, 5 -> 1700633447869, 6 -> 1700633447869, 7 -> 1700633447869, 8 -> 1700633447869, 9 -> 1700633447869, 10 -> 1700633447869, 11 -> 1700633447869, 12 -> 1700633447869, 13 -> 1700633447869, 14 -> 1700633447869, 15 -> 1700633447869, 16 -> 1700633447869, 17 -> 1700633447869, 18 -> 1700633447869, 19 -> 1700633447869, 20 -> 1700633447869, 21 -> 1700633447869, 22 -> 1700633447869, 23 -> 1700633447869, 24 -> 1700633447869, 25 -> 1700633447869, 26 -> 1700633447869, 27 -> 1700633447869, 28 -> 1700633447869, 29 -> 1700633447869, 30 -> 1700633447869, 31 -> 1700633447869, 32 -> 1700633447869, 33 -> 1700633447869, 34 -> 1700633447869, 35 -> 1700633447869, 36 -> 1700633447869, 37 -> 1700633447869, 38 -> 1700633447869, 39 -> 1700633447869, 40 -> 1700633447869, 41 -> 1700633447869, 42 -> 1700633447869, 43 -> 1700633447869, 44 -> 1700633447869, 45 -> 1700633447869, 46 -> 1700633447869, 47 -> 1700633447869, 48 -> 1700633447869, 49 -> 1700633447869),Buffer(),List(),0)),false,List(0, 1),0248287b-b100-4ed1-9f5c-dcbc8c4aacee)
[2023-11-21 22:11:37,335] DEBUG query-sched-2 filodb.query.Query$ [] - queryId=f5167693-9807-4ef8-81a4-1a2f3bf9483c on dataset=prometheus shard=2 schema=Some(untyped) is configured to use columnIDs=List(0, 1)
[2023-11-21 22:11:37,339] DEBUG query-sched-2 f.c.m.OnDemandPagingShard [] - Query on dataset=prometheus shard=2 resulted in partial ODP of partIds Set(), and full ODP of partIds Buffer()
0: QueryActor-0248287b-b100-4ed1-9f5c-dcbc8c4aacee --> StreamQueryResultHeader(f5167693-9807-4ef8-81a4-1a2f3bf9483c,0248287b-b100-4ed1-9f5c-dcbc8c4aacee,ResultSchema(List(ColumnInfo(timestamp,TimestampColumn,true), ColumnInfo(value,DoubleColumn,true)),1,Map(),Some(241),List(0, 1)))
0: ResultActor-0248287b-b100-4ed1-9f5c-dcbc8c4aacee --> StreamQueryResultHeader(f5167693-9807-4ef8-81a4-1a2f3bf9483c,0248287b-b100-4ed1-9f5c-dcbc8c4aacee,ResultSchema(List(ColumnInfo(timestamp,TimestampColumn,true), ColumnInfo(value,DoubleColumn,true)),1,Map(),Some(241),List(0, 1)))
[2023-11-21 22:11:37,352] DEBUG filo-standalone-akka.actor.default-dispatcher-2 filodb.query.Query$ [] - Got StreamQueryResultHeader for plan 0248287b-b100-4ed1-9f5c-dcbc8c4aacee
0: QueryActor-c85cb9e4-3120-439e-a4e8-895269612e4c --> StreamQueryResultHeader(f5167693-9807-4ef8-81a4-1a2f3bf9483c,c85cb9e4-3120-439e-a4e8-895269612e4c,ResultSchema(List(ColumnInfo(timestamp,TimestampColumn,true), ColumnInfo(value,DoubleColumn,true)),1,Map(),Some(241),List(0, 1)))
[2023-11-21 22:11:37,354] DEBUG query-sched-4 filodb.query.Query$ [] - DISPATCHING 85d7e996-74b8-4381-83d1-db6b850766f8
2: ResultActor-0248287b-b100-4ed1-9f5c-dcbc8c4aacee canceled
3: ResultActor-0248287b-b100-4ed1-9f5c-dcbc8c4aacee stopped
[2023-11-21 22:11:37,362] DEBUG query-sched-2 f.c.m.OnDemandPagingShard [] - Finished creating full ODP partitions List()
1: QueryActor-0248287b-b100-4ed1-9f5c-dcbc8c4aacee --> StreamQueryResult(f5167693-9807-4ef8-81a4-1a2f3bf9483c,0248287b-b100-4ed1-9f5c-dcbc8c4aacee,ArrayBuffer(filodb.core.query.SerializedRangeVector@5d21fd6d, filodb.core.query.SerializedRangeVector@2ca251bc, filodb.core.query.SerializedRangeVector@7bfff9d8, filodb.core.query.SerializedRangeVector@255c6754, filodb.core.query.SerializedRangeVector@77442c07, filodb.core.query.SerializedRangeVector@4955bce2, filodb.core.query.SerializedRangeVector@4d60bd29, filodb.core.query.SerializedRangeVector@b401516, filodb.core.query.SerializedRangeVector@5d32246d, filodb.core.query.SerializedRangeVector@39643185, filodb.core.query.SerializedRangeVector@71a55a75, filodb.core.query.SerializedRangeVector@7a4609f2, filodb.core.query.SerializedRangeVector@369b4b9b, filodb.core.query.SerializedRangeVector@2eebbcd4, filodb.core.query.SerializedRangeVector@75462d8e, filodb.core.query.SerializedRangeVector@3f85b34d, filodb.core.query.SerializedRangeVector@53aef0b5, filodb.core.query.SerializedRangeVector@2050eb08, filodb.core.query.SerializedRangeVector@643e88d1, filodb.core.query.SerializedRangeVector@76b350c0, filodb.core.query.SerializedRangeVector@52bc2dfb, filodb.core.query.SerializedRangeVector@7593840f, filodb.core.query.SerializedRangeVector@65fbf26c, filodb.core.query.SerializedRangeVector@9229b43, filodb.core.query.SerializedRangeVector@3a42ac69, filodb.core.query.SerializedRangeVector@5318e4d2, filodb.core.query.SerializedRangeVector@69ca044f, filodb.core.query.SerializedRangeVector@74af72b6, filodb.core.query.SerializedRangeVector@5ba1a9ae, filodb.core.query.SerializedRangeVector@4f8bf87c, filodb.core.query.SerializedRangeVector@765a75be, filodb.core.query.SerializedRangeVector@79ef9301, filodb.core.query.SerializedRangeVector@2fd5a94b, filodb.core.query.SerializedRangeVector@3f0decd5, filodb.core.query.SerializedRangeVector@1adf990f, filodb.core.query.SerializedRangeVector@1fad76ce, filodb.core.query.SerializedRangeVector@1d301b81, filodb.core.query.SerializedRangeVector@4d0b37b6, filodb.core.query.SerializedRangeVector@2bfac8f9, filodb.core.query.SerializedRangeVector@5f95c04e, filodb.core.query.SerializedRangeVector@42e4242e, filodb.core.query.SerializedRangeVector@56461d43, filodb.core.query.SerializedRangeVector@2b86aa72, filodb.core.query.SerializedRangeVector@5a6088fc, filodb.core.query.SerializedRangeVector@39c612ca, filodb.core.query.SerializedRangeVector@5f0cbcb4, filodb.core.query.SerializedRangeVector@41c7581d, filodb.core.query.SerializedRangeVector@1fbe1fb1, filodb.core.query.SerializedRangeVector@16e70ece, filodb.core.query.SerializedRangeVector@2c34f9ba))
[2023-11-21 22:11:37,400] DEBUG filo-standalone-akka.actor.default-dispatcher-2 filodb.query.Query$ [] - Got StreamQueryResult for plan 0248287b-b100-4ed1-9f5c-dcbc8c4aacee
2: QueryActor-0248287b-b100-4ed1-9f5c-dcbc8c4aacee --> StreamQueryResultFooter(f5167693-9807-4ef8-81a4-1a2f3bf9483c,0248287b-b100-4ed1-9f5c-dcbc8c4aacee,TrieMap(List(local, raw, demo, App-0, heap_usage0) -> (timeSeriesScanned=50, dataBytesScanned=288800, resultBytes=250247, cpuNanos=94162000)),QueryWarnings(0,0,0,0,0,0,0),false,None)
3: QueryActor-0248287b-b100-4ed1-9f5c-dcbc8c4aacee completed
[2023-11-21 22:11:37,401] DEBUG filo-standalone-akka.actor.default-dispatcher-2 filodb.query.Query$ [] - Got StreamQueryResultFooter for plan 0248287b-b100-4ed1-9f5c-dcbc8c4aacee
0: ResultActor-85d7e996-74b8-4381-83d1-db6b850766f8 --> StreamQueryResultHeader(f5167693-9807-4ef8-81a4-1a2f3bf9483c,85d7e996-74b8-4381-83d1-db6b850766f8,ResultSchema(List(ColumnInfo(timestamp,TimestampColumn,true), ColumnInfo(value,DoubleColumn,true)),1,Map(),Some(241),List(0, 1)))
[2023-11-21 22:11:37,443] DEBUG filo-standalone-akka.actor.default-dispatcher-2 filodb.query.Query$ [] - Got StreamQueryResultHeader for plan 85d7e996-74b8-4381-83d1-db6b850766f8
1: ResultActor-85d7e996-74b8-4381-83d1-db6b850766f8 --> StreamQueryResult(f5167693-9807-4ef8-81a4-1a2f3bf9483c,85d7e996-74b8-4381-83d1-db6b850766f8,ArrayBuffer(filodb.core.query.SerializedRangeVector@6d79b286, filodb.core.query.SerializedRangeVector@73ec120b, filodb.core.query.SerializedRangeVector@57b97e71, filodb.core.query.SerializedRangeVector@225c729c, filodb.core.query.SerializedRangeVector@21109d3, filodb.core.query.SerializedRangeVector@117e3fd0, filodb.core.query.SerializedRangeVector@d288178, filodb.core.query.SerializedRangeVector@4ca1dad3, filodb.core.query.SerializedRangeVector@46741d05, filodb.core.query.SerializedRangeVector@26143aa4, filodb.core.query.SerializedRangeVector@6f7e5c5f, filodb.core.query.SerializedRangeVector@2d4b6421, filodb.core.query.SerializedRangeVector@4bb1c8b8, filodb.core.query.SerializedRangeVector@4cf71a70, filodb.core.query.SerializedRangeVector@51f63b15, filodb.core.query.SerializedRangeVector@27ea3766, filodb.core.query.SerializedRangeVector@62dbcf2b, filodb.core.query.SerializedRangeVector@168b6d9a, filodb.core.query.SerializedRangeVector@7645c2cd, filodb.core.query.SerializedRangeVector@629a64, filodb.core.query.SerializedRangeVector@3cfcafd4, filodb.core.query.SerializedRangeVector@71d6f26c, filodb.core.query.SerializedRangeVector@29dd1531, filodb.core.query.SerializedRangeVector@3d780bd4, filodb.core.query.SerializedRangeVector@642391a0, filodb.core.query.SerializedRangeVector@22204ada, filodb.core.query.SerializedRangeVector@6315a732, filodb.core.query.SerializedRangeVector@1e4e262f, filodb.core.query.SerializedRangeVector@66981ad7, filodb.core.query.SerializedRangeVector@46cefa44, filodb.core.query.SerializedRangeVector@82ce998, filodb.core.query.SerializedRangeVector@673cd9ec, filodb.core.query.SerializedRangeVector@41d4297e, filodb.core.query.SerializedRangeVector@70f9e7da, filodb.core.query.SerializedRangeVector@1f76a074, filodb.core.query.SerializedRangeVector@1e84f9cf, filodb.core.query.SerializedRangeVector@7efbacb8, filodb.core.query.SerializedRangeVector@4183538a, filodb.core.query.SerializedRangeVector@6bdc3ece, filodb.core.query.SerializedRangeVector@522fe8fb, filodb.core.query.SerializedRangeVector@7112106a, filodb.core.query.SerializedRangeVector@2ad612c1, filodb.core.query.SerializedRangeVector@20f6731b, filodb.core.query.SerializedRangeVector@db32fce, filodb.core.query.SerializedRangeVector@6c43ff52, filodb.core.query.SerializedRangeVector@7699a801, filodb.core.query.SerializedRangeVector@65647362, filodb.core.query.SerializedRangeVector@713ded5f, filodb.core.query.SerializedRangeVector@2f72545, filodb.core.query.SerializedRangeVector@39154cba))
[2023-11-21 22:11:37,511] DEBUG filo-standalone-akka.actor.default-dispatcher-2 filodb.query.Query$ [] - Got StreamQueryResult for plan 85d7e996-74b8-4381-83d1-db6b850766f8
[2023-11-21 22:11:37,515] DEBUG filo-standalone-akka.actor.default-dispatcher-2 filodb.query.Query$ [] - Got StreamQueryResultFooter for plan 85d7e996-74b8-4381-83d1-db6b850766f8
2: ResultActor-85d7e996-74b8-4381-83d1-db6b850766f8 --> StreamQueryResultFooter(f5167693-9807-4ef8-81a4-1a2f3bf9483c,85d7e996-74b8-4381-83d1-db6b850766f8,TrieMap(List(local, raw, demo, App-0, heap_usage0) -> (timeSeriesScanned=50, dataBytesScanned=288800, resultBytes=250243, cpuNanos=102128000)),QueryWarnings(0,0,0,0,0,0,0),false,None)
3: ResultActor-85d7e996-74b8-4381-83d1-db6b850766f8 completed
