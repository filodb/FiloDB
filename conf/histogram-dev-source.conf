    dataset = "histogram"

    definition {
      partition-columns = ["tags:map"]
      data-columns = ["timestamp:ts", "count:long", "sum:long", "h:hist:counter=false" ]
      row-key-columns = [ "timestamp" ]
      downsamplers = [ ]
    }

    options {
      shardKeyColumns = [ "__name__", "_ns" ]
      ignoreShardKeyColumnSuffixes = { "__name__" = [ ] }
      valueColumn = "h"
      metricColumn = "__name__"
      ignoreTagsOnPartitionKeyHash = [ ]
      copyTags = { }
    }

    num-shards = 4
    min-num-nodes = 2
    sourcefactory = "filodb.kafka.KafkaIngestionStreamFactory"

    sourceconfig {
      # Required FiloDB configurations
      filo-topic-name = "histogram-dev"

      # Standard kafka configurations, e.g.
      # This accepts both the standard kafka value of a comma-separated
      # string and a Typesafe list of String values
      # EXCEPT: do not populate value.deserializer, as the Kafka format is fixed in FiloDB to be messages of RecordContainer's
      bootstrap.servers = "localhost:9092"
      group.id = "filo-db-histogram-ingestion"

      # Values controlling in-memory store chunking, flushing, etc.
      store {
        # Interval it takes to flush ALL time series in a shard.  This time is further divided by groups-per-shard
        flush-interval = 1h

        # TTL for on-disk / C* data.  Data older than this may be purged.
        disk-time-to-live = 24 hours

        # amount of time paged chunks should be retained in memory.
        # We need to have a minimum of x hours free blocks or else init won't work.
        demand-paged-chunk-retention-period = 12 hours

        max-chunks-size = 400

        # Write buffer size, in bytes, for blob columns (histograms, UTF8Strings).  Since these are variable data types,
        # we need a maximum size, not a maximum number of items.
        max-blob-buffer-size = 15000

        # Number of bytes of offheap mem to allocate to chunk storage in each shard.  Ex. 1000MB, 1G, 2GB
        # Assume 5 bytes per sample, should be roughly equal to (# samples per time series) * (# time series)
        shard-mem-size = 512MB

        # Number of bytes of offheap mem to allocate to write buffers for all shards.  Ex. 1000MB, 1G, 2GB
        ingestion-buffer-mem-size = 200MB

        # Number of time series to evict at a time.
        # num-partitions-to-evict = 1000

        # Number of subgroups within each shard.  Persistence to a ChunkSink occurs one subgroup at a time, as does
        # recovery from failure.  This many batches of flushes must occur to cover persistence of every partition
        groups-per-shard = 20

        # Use a "MultiPartitionScan" or Cassandra MULTIGET for on-demand paging. Might improve performance.
        multi-partition-odp = false
      }
      downsample {
        # can be disabled by setting this flag to false
        enabled = false
      }
    }