// Generated from PromQL.g4 by ANTLR 4.9
package filodb.prometheus.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PromQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, NUMBER=9, 
		STRING=10, ADD=11, SUB=12, MUL=13, DIV=14, MOD=15, POW=16, EQ=17, DEQ=18, 
		NE=19, GT=20, LT=21, GE=22, LE=23, RE=24, NRE=25, AT=26, AND=27, OR=28, 
		UNLESS=29, BY=30, WITHOUT=31, ON=32, IGNORING=33, GROUP_LEFT=34, GROUP_RIGHT=35, 
		OFFSET=36, LIMIT=37, BOOL=38, START=39, END=40, AGGREGATION_OP=41, DURATION=42, 
		IDENTIFIER=43, IDENTIFIER_EXTENDED=44, WS=45, COMMENT=46;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "NUMBER", 
			"STRING", "ADD", "SUB", "MUL", "DIV", "MOD", "POW", "EQ", "DEQ", "NE", 
			"GT", "LT", "GE", "LE", "RE", "NRE", "AT", "AND", "OR", "UNLESS", "BY", 
			"WITHOUT", "ON", "IGNORING", "GROUP_LEFT", "GROUP_RIGHT", "OFFSET", "LIMIT", 
			"BOOL", "START", "END", "AGGREGATION_OP", "DURATION", "IDENTIFIER", "IDENTIFIER_EXTENDED", 
			"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
			"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "WS", "COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "')'", "'{'", "'}'", "'['", "']'", "':'", "','", null, null, 
			"'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "'='", "'=='", "'!='", "'>'", 
			"'<'", "'>='", "'<='", "'=~'", "'!~'", "'@'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, "NUMBER", "STRING", 
			"ADD", "SUB", "MUL", "DIV", "MOD", "POW", "EQ", "DEQ", "NE", "GT", "LT", 
			"GE", "LE", "RE", "NRE", "AT", "AND", "OR", "UNLESS", "BY", "WITHOUT", 
			"ON", "IGNORING", "GROUP_LEFT", "GROUP_RIGHT", "OFFSET", "LIMIT", "BOOL", 
			"START", "END", "AGGREGATION_OP", "DURATION", "IDENTIFIER", "IDENTIFIER_EXTENDED", 
			"WS", "COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PromQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PromQL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\60\u0213\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t"+
		"=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4"+
		"I\tI\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3"+
		"\n\7\n\u00a5\n\n\f\n\16\n\u00a8\13\n\3\n\5\n\u00ab\n\n\3\n\6\n\u00ae\n"+
		"\n\r\n\16\n\u00af\3\n\3\n\5\n\u00b4\n\n\3\n\6\n\u00b7\n\n\r\n\16\n\u00b8"+
		"\5\n\u00bb\n\n\3\n\6\n\u00be\n\n\r\n\16\n\u00bf\3\n\3\n\3\n\3\n\6\n\u00c6"+
		"\n\n\r\n\16\n\u00c7\5\n\u00ca\n\n\3\13\3\13\3\13\3\13\7\13\u00d0\n\13"+
		"\f\13\16\13\u00d3\13\13\3\13\3\13\3\13\3\13\3\13\7\13\u00da\n\13\f\13"+
		"\16\13\u00dd\13\13\3\13\5\13\u00e0\n\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17"+
		"\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25"+
		"\3\25\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3\"\3"+
		"\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$"+
		"\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&"+
		"\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*\3"+
		"*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3"+
		"*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3"+
		"*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3"+
		"*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\5*\u01b7\n*\3+\3+\3+\3,\3,\7,\u01be"+
		"\n,\f,\16,\u01c1\13,\3-\7-\u01c4\n-\f-\16-\u01c7\13-\3-\3-\7-\u01cb\n"+
		"-\f-\16-\u01ce\13-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63"+
		"\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3"+
		"<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3"+
		"H\6H\u0205\nH\rH\16H\u0206\3H\3H\3I\3I\7I\u020d\nI\fI\16I\u0210\13I\3"+
		"I\3I\2\2J\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33"+
		"\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67"+
		"\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[\2]\2_\2a\2c\2e\2g\2i\2k\2"+
		"m\2o\2q\2s\2u\2w\2y\2{\2}\2\177\2\u0081\2\u0083\2\u0085\2\u0087\2\u0089"+
		"\2\u008b\2\u008d\2\u008f/\u0091\60\3\2)\3\2\62;\4\2GGgg\4\2--//\4\2ZZ"+
		"zz\5\2\62;CHch\4\2))^^\4\2$$^^\b\2ffjkoouuyy{{\5\2C\\aac|\6\2\62;C\\a"+
		"ac|\4\2<<aa\4\2C\\c|\7\2/\60\62<C\\aac|\4\2CCcc\4\2DDdd\4\2EEee\4\2FF"+
		"ff\4\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2"+
		"PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4"+
		"\2YYyy\4\2[[{{\4\2\\\\||\5\2\13\f\17\17\"\"\4\2\f\f\17\17\2\u0218\2\3"+
		"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2"+
		"\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31"+
		"\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2"+
		"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2"+
		"\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2"+
		"\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2"+
		"I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3"+
		"\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\3\u0093\3"+
		"\2\2\2\5\u0095\3\2\2\2\7\u0097\3\2\2\2\t\u0099\3\2\2\2\13\u009b\3\2\2"+
		"\2\r\u009d\3\2\2\2\17\u009f\3\2\2\2\21\u00a1\3\2\2\2\23\u00c9\3\2\2\2"+
		"\25\u00df\3\2\2\2\27\u00e1\3\2\2\2\31\u00e3\3\2\2\2\33\u00e5\3\2\2\2\35"+
		"\u00e7\3\2\2\2\37\u00e9\3\2\2\2!\u00eb\3\2\2\2#\u00ed\3\2\2\2%\u00ef\3"+
		"\2\2\2\'\u00f2\3\2\2\2)\u00f5\3\2\2\2+\u00f7\3\2\2\2-\u00f9\3\2\2\2/\u00fc"+
		"\3\2\2\2\61\u00ff\3\2\2\2\63\u0102\3\2\2\2\65\u0105\3\2\2\2\67\u0107\3"+
		"\2\2\29\u010b\3\2\2\2;\u010e\3\2\2\2=\u0115\3\2\2\2?\u0118\3\2\2\2A\u0120"+
		"\3\2\2\2C\u0123\3\2\2\2E\u012c\3\2\2\2G\u0137\3\2\2\2I\u0143\3\2\2\2K"+
		"\u014a\3\2\2\2M\u0150\3\2\2\2O\u0155\3\2\2\2Q\u015d\3\2\2\2S\u01b6\3\2"+
		"\2\2U\u01b8\3\2\2\2W\u01bb\3\2\2\2Y\u01c5\3\2\2\2[\u01cf\3\2\2\2]\u01d1"+
		"\3\2\2\2_\u01d3\3\2\2\2a\u01d5\3\2\2\2c\u01d7\3\2\2\2e\u01d9\3\2\2\2g"+
		"\u01db\3\2\2\2i\u01dd\3\2\2\2k\u01df\3\2\2\2m\u01e1\3\2\2\2o\u01e3\3\2"+
		"\2\2q\u01e5\3\2\2\2s\u01e7\3\2\2\2u\u01e9\3\2\2\2w\u01eb\3\2\2\2y\u01ed"+
		"\3\2\2\2{\u01ef\3\2\2\2}\u01f1\3\2\2\2\177\u01f3\3\2\2\2\u0081\u01f5\3"+
		"\2\2\2\u0083\u01f7\3\2\2\2\u0085\u01f9\3\2\2\2\u0087\u01fb\3\2\2\2\u0089"+
		"\u01fd\3\2\2\2\u008b\u01ff\3\2\2\2\u008d\u0201\3\2\2\2\u008f\u0204\3\2"+
		"\2\2\u0091\u020a\3\2\2\2\u0093\u0094\7*\2\2\u0094\4\3\2\2\2\u0095\u0096"+
		"\7+\2\2\u0096\6\3\2\2\2\u0097\u0098\7}\2\2\u0098\b\3\2\2\2\u0099\u009a"+
		"\7\177\2\2\u009a\n\3\2\2\2\u009b\u009c\7]\2\2\u009c\f\3\2\2\2\u009d\u009e"+
		"\7_\2\2\u009e\16\3\2\2\2\u009f\u00a0\7<\2\2\u00a0\20\3\2\2\2\u00a1\u00a2"+
		"\7.\2\2\u00a2\22\3\2\2\2\u00a3\u00a5\t\2\2\2\u00a4\u00a3\3\2\2\2\u00a5"+
		"\u00a8\3\2\2\2\u00a6\u00a4\3\2\2\2\u00a6\u00a7\3\2\2\2\u00a7\u00aa\3\2"+
		"\2\2\u00a8\u00a6\3\2\2\2\u00a9\u00ab\7\60\2\2\u00aa\u00a9\3\2\2\2\u00aa"+
		"\u00ab\3\2\2\2\u00ab\u00ad\3\2\2\2\u00ac\u00ae\t\2\2\2\u00ad\u00ac\3\2"+
		"\2\2\u00ae\u00af\3\2\2\2\u00af\u00ad\3\2\2\2\u00af\u00b0\3\2\2\2\u00b0"+
		"\u00ba\3\2\2\2\u00b1\u00b3\t\3\2\2\u00b2\u00b4\t\4\2\2\u00b3\u00b2\3\2"+
		"\2\2\u00b3\u00b4\3\2\2\2\u00b4\u00b6\3\2\2\2\u00b5\u00b7\t\2\2\2\u00b6"+
		"\u00b5\3\2\2\2\u00b7\u00b8\3\2\2\2\u00b8\u00b6\3\2\2\2\u00b8\u00b9\3\2"+
		"\2\2\u00b9\u00bb\3\2\2\2\u00ba\u00b1\3\2\2\2\u00ba\u00bb\3\2\2\2\u00bb"+
		"\u00ca\3\2\2\2\u00bc\u00be\t\2\2\2\u00bd\u00bc\3\2\2\2\u00be\u00bf\3\2"+
		"\2\2\u00bf\u00bd\3\2\2\2\u00bf\u00c0\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1"+
		"\u00ca\7\60\2\2\u00c2\u00c3\7\62\2\2\u00c3\u00c5\t\5\2\2\u00c4\u00c6\t"+
		"\6\2\2\u00c5\u00c4\3\2\2\2\u00c6\u00c7\3\2\2\2\u00c7\u00c5\3\2\2\2\u00c7"+
		"\u00c8\3\2\2\2\u00c8\u00ca\3\2\2\2\u00c9\u00a6\3\2\2\2\u00c9\u00bd\3\2"+
		"\2\2\u00c9\u00c2\3\2\2\2\u00ca\24\3\2\2\2\u00cb\u00d1\7)\2\2\u00cc\u00d0"+
		"\n\7\2\2\u00cd\u00ce\7^\2\2\u00ce\u00d0\13\2\2\2\u00cf\u00cc\3\2\2\2\u00cf"+
		"\u00cd\3\2\2\2\u00d0\u00d3\3\2\2\2\u00d1\u00cf\3\2\2\2\u00d1\u00d2\3\2"+
		"\2\2\u00d2\u00d4\3\2\2\2\u00d3\u00d1\3\2\2\2\u00d4\u00e0\7)\2\2\u00d5"+
		"\u00db\7$\2\2\u00d6\u00da\n\b\2\2\u00d7\u00d8\7^\2\2\u00d8\u00da\13\2"+
		"\2\2\u00d9\u00d6\3\2\2\2\u00d9\u00d7\3\2\2\2\u00da\u00dd\3\2\2\2\u00db"+
		"\u00d9\3\2\2\2\u00db\u00dc\3\2\2\2\u00dc\u00de\3\2\2\2\u00dd\u00db\3\2"+
		"\2\2\u00de\u00e0\7$\2\2\u00df\u00cb\3\2\2\2\u00df\u00d5\3\2\2\2\u00e0"+
		"\26\3\2\2\2\u00e1\u00e2\7-\2\2\u00e2\30\3\2\2\2\u00e3\u00e4\7/\2\2\u00e4"+
		"\32\3\2\2\2\u00e5\u00e6\7,\2\2\u00e6\34\3\2\2\2\u00e7\u00e8\7\61\2\2\u00e8"+
		"\36\3\2\2\2\u00e9\u00ea\7\'\2\2\u00ea \3\2\2\2\u00eb\u00ec\7`\2\2\u00ec"+
		"\"\3\2\2\2\u00ed\u00ee\7?\2\2\u00ee$\3\2\2\2\u00ef\u00f0\7?\2\2\u00f0"+
		"\u00f1\7?\2\2\u00f1&\3\2\2\2\u00f2\u00f3\7#\2\2\u00f3\u00f4\7?\2\2\u00f4"+
		"(\3\2\2\2\u00f5\u00f6\7@\2\2\u00f6*\3\2\2\2\u00f7\u00f8\7>\2\2\u00f8,"+
		"\3\2\2\2\u00f9\u00fa\7@\2\2\u00fa\u00fb\7?\2\2\u00fb.\3\2\2\2\u00fc\u00fd"+
		"\7>\2\2\u00fd\u00fe\7?\2\2\u00fe\60\3\2\2\2\u00ff\u0100\7?\2\2\u0100\u0101"+
		"\7\u0080\2\2\u0101\62\3\2\2\2\u0102\u0103\7#\2\2\u0103\u0104\7\u0080\2"+
		"\2\u0104\64\3\2\2\2\u0105\u0106\7B\2\2\u0106\66\3\2\2\2\u0107\u0108\5"+
		"[.\2\u0108\u0109\5u;\2\u0109\u010a\5a\61\2\u010a8\3\2\2\2\u010b\u010c"+
		"\5w<\2\u010c\u010d\5}?\2\u010d:\3\2\2\2\u010e\u010f\5\u0083B\2\u010f\u0110"+
		"\5u;\2\u0110\u0111\5q9\2\u0111\u0112\5c\62\2\u0112\u0113\5\177@\2\u0113"+
		"\u0114\5\177@\2\u0114<\3\2\2\2\u0115\u0116\5]/\2\u0116\u0117\5\u008bF"+
		"\2\u0117>\3\2\2\2\u0118\u0119\5\u0087D\2\u0119\u011a\5k\66\2\u011a\u011b"+
		"\5\u0081A\2\u011b\u011c\5i\65\2\u011c\u011d\5w<\2\u011d\u011e\5\u0083"+
		"B\2\u011e\u011f\5\u0081A\2\u011f@\3\2\2\2\u0120\u0121\5w<\2\u0121\u0122"+
		"\5u;\2\u0122B\3\2\2\2\u0123\u0124\5k\66\2\u0124\u0125\5g\64\2\u0125\u0126"+
		"\5u;\2\u0126\u0127\5w<\2\u0127\u0128\5}?\2\u0128\u0129\5k\66\2\u0129\u012a"+
		"\5u;\2\u012a\u012b\5g\64\2\u012bD\3\2\2\2\u012c\u012d\5g\64\2\u012d\u012e"+
		"\5}?\2\u012e\u012f\5w<\2\u012f\u0130\5\u0083B\2\u0130\u0131\5y=\2\u0131"+
		"\u0132\7a\2\2\u0132\u0133\5q9\2\u0133\u0134\5c\62\2\u0134\u0135\5e\63"+
		"\2\u0135\u0136\5\u0081A\2\u0136F\3\2\2\2\u0137\u0138\5g\64\2\u0138\u0139"+
		"\5}?\2\u0139\u013a\5w<\2\u013a\u013b\5\u0083B\2\u013b\u013c\5y=\2\u013c"+
		"\u013d\7a\2\2\u013d\u013e\5}?\2\u013e\u013f\5k\66\2\u013f\u0140\5g\64"+
		"\2\u0140\u0141\5i\65\2\u0141\u0142\5\u0081A\2\u0142H\3\2\2\2\u0143\u0144"+
		"\5w<\2\u0144\u0145\5e\63\2\u0145\u0146\5e\63\2\u0146\u0147\5\177@\2\u0147"+
		"\u0148\5c\62\2\u0148\u0149\5\u0081A\2\u0149J\3\2\2\2\u014a\u014b\5q9\2"+
		"\u014b\u014c\5k\66\2\u014c\u014d\5s:\2\u014d\u014e\5k\66\2\u014e\u014f"+
		"\5\u0081A\2\u014fL\3\2\2\2\u0150\u0151\5]/\2\u0151\u0152\5w<\2\u0152\u0153"+
		"\5w<\2\u0153\u0154\5q9\2\u0154N\3\2\2\2\u0155\u0156\5\177@\2\u0156\u0157"+
		"\5\u0081A\2\u0157\u0158\5[.\2\u0158\u0159\5}?\2\u0159\u015a\5\u0081A\2"+
		"\u015a\u015b\7*\2\2\u015b\u015c\7+\2\2\u015cP\3\2\2\2\u015d\u015e\5c\62"+
		"\2\u015e\u015f\5u;\2\u015f\u0160\5a\61\2\u0160\u0161\7*\2\2\u0161\u0162"+
		"\7+\2\2\u0162R\3\2\2\2\u0163\u0164\5\177@\2\u0164\u0165\5\u0083B\2\u0165"+
		"\u0166\5s:\2\u0166\u01b7\3\2\2\2\u0167\u0168\5s:\2\u0168\u0169\5k\66\2"+
		"\u0169\u016a\5u;\2\u016a\u01b7\3\2\2\2\u016b\u016c\5s:\2\u016c\u016d\5"+
		"[.\2\u016d\u016e\5\u0089E\2\u016e\u01b7\3\2\2\2\u016f\u0170\5[.\2\u0170"+
		"\u0171\5\u0085C\2\u0171\u0172\5g\64\2\u0172\u01b7\3\2\2\2\u0173\u0174"+
		"\5g\64\2\u0174\u0175\5}?\2\u0175\u0176\5w<\2\u0176\u0177\5\u0083B\2\u0177"+
		"\u0178\5y=\2\u0178\u01b7\3\2\2\2\u0179\u017a\5\177@\2\u017a\u017b\5\u0081"+
		"A\2\u017b\u017c\5a\61\2\u017c\u017d\5a\61\2\u017d\u017e\5c\62\2\u017e"+
		"\u017f\5\u0085C\2\u017f\u01b7\3\2\2\2\u0180\u0181\5\177@\2\u0181\u0182"+
		"\5\u0081A\2\u0182\u0183\5a\61\2\u0183\u0184\5\u0085C\2\u0184\u0185\5["+
		".\2\u0185\u0186\5}?\2\u0186\u01b7\3\2\2\2\u0187\u0188\5_\60\2\u0188\u0189"+
		"\5w<\2\u0189\u018a\5\u0083B\2\u018a\u018b\5u;\2\u018b\u018c\5\u0081A\2"+
		"\u018c\u01b7\3\2\2\2\u018d\u018e\5_\60\2\u018e\u018f\5w<\2\u018f\u0190"+
		"\5\u0083B\2\u0190\u0191\5u;\2\u0191\u0192\5\u0081A\2\u0192\u0193\7a\2"+
		"\2\u0193\u0194\5\u0085C\2\u0194\u0195\5[.\2\u0195\u0196\5q9\2\u0196\u0197"+
		"\5\u0083B\2\u0197\u0198\5c\62\2\u0198\u0199\5\177@\2\u0199\u01b7\3\2\2"+
		"\2\u019a\u019b\5]/\2\u019b\u019c\5w<\2\u019c\u019d\5\u0081A\2\u019d\u019e"+
		"\5\u0081A\2\u019e\u019f\5w<\2\u019f\u01a0\5s:\2\u01a0\u01a1\5o8\2\u01a1"+
		"\u01b7\3\2\2\2\u01a2\u01a3\5\u0081A\2\u01a3\u01a4\5w<\2\u01a4\u01a5\5"+
		"y=\2\u01a5\u01a6\5o8\2\u01a6\u01b7\3\2\2\2\u01a7\u01a8\5{>\2\u01a8\u01a9"+
		"\5\u0083B\2\u01a9\u01aa\5[.\2\u01aa\u01ab\5u;\2\u01ab\u01ac\5\u0081A\2"+
		"\u01ac\u01ad\5k\66\2\u01ad\u01ae\5q9\2\u01ae\u01af\5c\62\2\u01af\u01b7"+
		"\3\2\2\2\u01b0\u01b1\5g\64\2\u01b1\u01b2\5}?\2\u01b2\u01b3\5w<\2\u01b3"+
		"\u01b4\5\u0083B\2\u01b4\u01b5\5y=\2\u01b5\u01b7\3\2\2\2\u01b6\u0163\3"+
		"\2\2\2\u01b6\u0167\3\2\2\2\u01b6\u016b\3\2\2\2\u01b6\u016f\3\2\2\2\u01b6"+
		"\u0173\3\2\2\2\u01b6\u0179\3\2\2\2\u01b6\u0180\3\2\2\2\u01b6\u0187\3\2"+
		"\2\2\u01b6\u018d\3\2\2\2\u01b6\u019a\3\2\2\2\u01b6\u01a2\3\2\2\2\u01b6"+
		"\u01a7\3\2\2\2\u01b6\u01b0\3\2\2\2\u01b7T\3\2\2\2\u01b8\u01b9\5\23\n\2"+
		"\u01b9\u01ba\t\t\2\2\u01baV\3\2\2\2\u01bb\u01bf\t\n\2\2\u01bc\u01be\t"+
		"\13\2\2\u01bd\u01bc\3\2\2\2\u01be\u01c1\3\2\2\2\u01bf\u01bd\3\2\2\2\u01bf"+
		"\u01c0\3\2\2\2\u01c0X\3\2\2\2\u01c1\u01bf\3\2\2\2\u01c2\u01c4\t\f\2\2"+
		"\u01c3\u01c2\3\2\2\2\u01c4\u01c7\3\2\2\2\u01c5\u01c3\3\2\2\2\u01c5\u01c6"+
		"\3\2\2\2\u01c6\u01c8\3\2\2\2\u01c7\u01c5\3\2\2\2\u01c8\u01cc\t\r\2\2\u01c9"+
		"\u01cb\t\16\2\2\u01ca\u01c9\3\2\2\2\u01cb\u01ce\3\2\2\2\u01cc\u01ca\3"+
		"\2\2\2\u01cc\u01cd\3\2\2\2\u01cdZ\3\2\2\2\u01ce\u01cc\3\2\2\2\u01cf\u01d0"+
		"\t\17\2\2\u01d0\\\3\2\2\2\u01d1\u01d2\t\20\2\2\u01d2^\3\2\2\2\u01d3\u01d4"+
		"\t\21\2\2\u01d4`\3\2\2\2\u01d5\u01d6\t\22\2\2\u01d6b\3\2\2\2\u01d7\u01d8"+
		"\t\3\2\2\u01d8d\3\2\2\2\u01d9\u01da\t\23\2\2\u01daf\3\2\2\2\u01db\u01dc"+
		"\t\24\2\2\u01dch\3\2\2\2\u01dd\u01de\t\25\2\2\u01dej\3\2\2\2\u01df\u01e0"+
		"\t\26\2\2\u01e0l\3\2\2\2\u01e1\u01e2\t\27\2\2\u01e2n\3\2\2\2\u01e3\u01e4"+
		"\t\30\2\2\u01e4p\3\2\2\2\u01e5\u01e6\t\31\2\2\u01e6r\3\2\2\2\u01e7\u01e8"+
		"\t\32\2\2\u01e8t\3\2\2\2\u01e9\u01ea\t\33\2\2\u01eav\3\2\2\2\u01eb\u01ec"+
		"\t\34\2\2\u01ecx\3\2\2\2\u01ed\u01ee\t\35\2\2\u01eez\3\2\2\2\u01ef\u01f0"+
		"\t\36\2\2\u01f0|\3\2\2\2\u01f1\u01f2\t\37\2\2\u01f2~\3\2\2\2\u01f3\u01f4"+
		"\t \2\2\u01f4\u0080\3\2\2\2\u01f5\u01f6\t!\2\2\u01f6\u0082\3\2\2\2\u01f7"+
		"\u01f8\t\"\2\2\u01f8\u0084\3\2\2\2\u01f9\u01fa\t#\2\2\u01fa\u0086\3\2"+
		"\2\2\u01fb\u01fc\t$\2\2\u01fc\u0088\3\2\2\2\u01fd\u01fe\t\5\2\2\u01fe"+
		"\u008a\3\2\2\2\u01ff\u0200\t%\2\2\u0200\u008c\3\2\2\2\u0201\u0202\t&\2"+
		"\2\u0202\u008e\3\2\2\2\u0203\u0205\t\'\2\2\u0204\u0203\3\2\2\2\u0205\u0206"+
		"\3\2\2\2\u0206\u0204\3\2\2\2\u0206\u0207\3\2\2\2\u0207\u0208\3\2\2\2\u0208"+
		"\u0209\bH\2\2\u0209\u0090\3\2\2\2\u020a\u020e\7%\2\2\u020b\u020d\n(\2"+
		"\2\u020c\u020b\3\2\2\2\u020d\u0210\3\2\2\2\u020e\u020c\3\2\2\2\u020e\u020f"+
		"\3\2\2\2\u020f\u0211\3\2\2\2\u0210\u020e\3\2\2\2\u0211\u0212\bI\2\2\u0212"+
		"\u0092\3\2\2\2\27\2\u00a6\u00aa\u00af\u00b3\u00b8\u00ba\u00bf\u00c7\u00c9"+
		"\u00cf\u00d1\u00d9\u00db\u00df\u01b6\u01bf\u01c5\u01cc\u0206\u020e\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}