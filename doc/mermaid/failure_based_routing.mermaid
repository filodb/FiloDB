sequenceDiagram
    participant C as Client
    participant QE as QueryEngine[cluster1]
    participant FD1 as FiloDB[cluster1]
    participant IPD as class InProcessPlanDispatcher
    participant RPD as class RemotePlanDispatcher
    participant QE2 as QueryEngine[cluster2]
    participant MP as def materializePlan
    participant FP as trait FailureProvider
    participant RP as trait RoutingPlanner
    C->>QE: Paser.queryToLogicalPlan
    QE-->>C: LogicalPlan
    C->>QE: materializePlan
    QE->>MP: materializePlan
    MP->>FP: getFailures
    FP-->>MP: Seq[FailureTimeRange]
    MP->>RP: plan(Seq[FailureTimeRange])
    RP-->>MP: Seq[Route]
    loop for each Route
        alt is LocalRoute
            MP ->> MP: updateLogicalPlanWithTimeRange
            MP ->> MP: walkLogicalPlanTree
            MP ->> MP: lhs: ExecPlan
        else is RemoteRoute
            MP ->> MP: updateLogicalPlanWithTimeRange
            MP ->> MP: createRemoteExecPlan
            MP ->> MP: rhs: ExecPlan
       end
    end
    MP -->> MP: createStitchExecPlan(InProcessDispatcher)
    MP -->> QE: StitchExecPlan
    QE -->> C: StitchExecPlan
    C ->> QE: StitchExecPlan.dispatch
    QE ->> IPD: dispatch
    IPD -->> IPD: ExecPlan.execute(DummyChunkSource)
    alt is Local ExecPlan
       IPD ->> FD1: dispatch and execute ExecPlan
       FD1 -->> IPD: QueryResponse
    else is Remote ExecPlan
       IPD ->> RPD: dispatch
       RPD ->> QE2: materialize and execute LogicalPlan
       QE2 -->> RPD: QueryResponse
       RPD -->> IPD: QueryResponse
    end
    IPD -->> IPD:  Stitch QueryResponse
    IPD -->> QE: QueryResponse
    QE -->> C: QueryResponse
