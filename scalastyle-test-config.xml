<scalastyle>
    <name>Scalastyle test configuration</name>
    <check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxFileLength"><![CDATA[800]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.file.HeaderMatchesChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.ProcedureDeclarationChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true" >
        <parameters>
            <parameter name="regex">;\r?\n</parameter>
        </parameters>
        <customMessage>No semicolon at end of line</customMessage>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLineLength"><![CDATA[120]]></parameter>
            <parameter name="tabSize"><![CDATA[2]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.FieldNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ClassTypeParameterChecker" enabled="false">
        <parameters>
            <parameter name="regex"><![CDATA[^[A-Z_]$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.ForBraceChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
        <parameters>
            <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
        <parameters>
            <parameter name="maxParameters"><![CDATA[8]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="false">
        <parameters>
            <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" enabled="false">
        <parameters>
            <parameter name="allowed">1</parameter>
            <parameter name="ignoreRegex">^\&quot;\&quot;$</parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NonASCIICharacterChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[println]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
        <parameters>
            <parameter name="maxTypes"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
        <parameters>
            <parameter name="maximum"><![CDATA[10]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="true"></check>
    <!-- TODO: enable ScalaDocChecker after bug resolved https://github.com/scalastyle/scalastyle/issues/123 -->
    <check level="warning" class="org.scalastyle.scalariform.ScalaDocChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.SpaceAfterCommentStartChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
        <parameters>
            <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
            <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLength"><![CDATA[50]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
        <parameters>
            <parameter name="maxMethods"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"></check>
    <!-- TODO: enable VarFieldChecker after bug resolved https://github.com/scalastyle/scalastyle/issues/132 -->
    <check level="warning" class="org.scalastyle.scalariform.VarFieldChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.VarLocalChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
        <!-- see http://docs.scala-lang.org/style/declarations.html -->
        <!-- see http://www.scala-lang.org/files/archive/spec/2.11/05-classes-and-objects.html#modifiers -->
        <parameters>
            <parameter name="regex">((lazy)\s+(override|private|protected|final|implicit))|((implicit)\s+(override|private|protected|final))|((final)\s+(override|private|protected))|((private|protected)\s+(override))</parameter>
        </parameters>
        <customMessage>Modifiers should be declared in the following order: "(override) (private|protected) (abstract|final|sealed) (implicit) (lazy)".</customMessage>
    </check>
</scalastyle>
